{"version":3,"sources":["components/EmployeeContext.js","components/Search.js","components/Navbar.js","hooks/API.js","components/Button.js","components/Table.js","App.js","serviceWorker.js","index.js"],"names":["EmployeeContext","createContext","Search","useState","search","setSearch","useContext","employees","setDisplayedEmployees","type","onChange","searchTerm","target","value","filterResult","filter","employee","name","first","toLowerCase","indexOf","Navbar","className","useGet","url","setEmployees","displayedEmployees","useEffect","a","async","axios","get","response","data","results","console","log","getEmployees","sortFunc","sort","b","dob","age","last","gender","Button","children","Table","onClick","map","key","login","uuid","email","App","Provider","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.76aa0257.chunk.js","sourcesContent":["import {createContext} from 'react'\n\nexport const EmployeeContext = createContext(null);","import React, {useState, useContext} from 'react';\nimport { EmployeeContext } from './EmployeeContext.js';\nimport \"./Search.css\"\n\nfunction Search(){\n    \n    const [search, setSearch] = useState(\"\")\n    const {employees, setDisplayedEmployees} = useContext(EmployeeContext)\n    \n    function updateSearch({target}){\n       \n        const searchTerm = target.value\n        \n        setSearch(searchTerm)\n        \n        const filterResult = employees.filter(function(employee){\n           \n            return employee.name.first.toLowerCase().indexOf(searchTerm.toLowerCase()) !== -1 ? true : false\n        })\n        setDisplayedEmployees([...filterResult])\n    }\n    \n    return(\n       <input type=\"text\" onChange= {updateSearch} value={search}></input>\n    )\n}\nexport default Search;","import React from 'react';\nimport Search from \"./Search.js\"\nimport \"./Navbar.css\"\n\nfunction Navbar(){\n    // used as the navbar for the site.\n    return(\n        <div className=\"navbar\">\n            <div className=\"logo bold\">Rivera Inc. Employee Directory</div>\n            <div className=\"descriptor\">\n                <div className=\"bold\">Search for Employee (By Name): </div>\n                <Search />\n            </div>\n        </div>\n    )\n}\nexport default Navbar;","import {useEffect, useContext} from 'react';\nimport {EmployeeContext} from \"../components/EmployeeContext\"\nimport axios from \"axios\"\n\nexport function useGet(url){\n    const{employees, setEmployees, displayedEmployees, setDisplayedEmployees} = useContext(EmployeeContext)\n\n   \n    useEffect(()=> {\n        async function getEmployees(){\n            try {\n                const response = await axios.get(url)\n                \n                setEmployees(response.data.results)\n                \n                setDisplayedEmployees(response.data.results)\n            }\n            catch (error) {\n                console.log(\"error ocurred getting info from the API: \", error)\n            }   \n        }\n        getEmployees()\n    },[])\n\n    \n    function sortFunc(sort){\n        switch(sort){\n            case \"name\":\n                sortByName()\n                break\n            case \"age\":\n                sortByAge()\n                break\n            case \"lastname\":\n                sortByLastName()\n                break\n            case \"gender\":\n                sortByGender()\n                break\n            default:\n                console.log(\"sort does not match any cases\")\n        }\n    }\n\n    \n    function sortByName(){\n         employees.sort(function(a,b){\n            if(a.name.first < b.name.first){\n                return -1;\n            }else{\n                return 1;\n            }\n        })\n        \n        setDisplayedEmployees([...employees])\n    }\n\n    function sortByLastName(){\n        employees.sort(function(a,b){\n           if(a.name.last < b.name.last){\n               return -1;\n           }else{\n               return 1;\n           }\n       })\n       \n       setDisplayedEmployees([...employees])\n   }\n\n    \n    function sortByAge(){\n        employees.sort(function(a,b){\n            return (a.dob.age - b.dob.age)\n        })\n        setDisplayedEmployees([...employees])\n    }\n\n    \n    function sortByGender(){\n        employees.sort(function(a,b){\n            if(a.gender < b.gender){\n                return -1;\n            }else{\n                return 1;\n            }\n        })\n        setDisplayedEmployees([...employees])\n    }\n\n    return {displayedEmployees, sortFunc}\n}\n","import React from 'react';\nimport \"./Button.css\"\n\nfunction Button({children}){\n   \n    return(\n        <button className=\"Button\">\n            {children}\n        </button>\n    )\n}\nexport default Button;","import React, { useState, useContext } from 'react';\nimport { useGet } from \"../hooks/API.js\"\nimport \"./Table.css\"\nimport Button from \"./Button.js\"\nimport { EmployeeContext } from './EmployeeContext.js';\n\n\nfunction Table() {\n    \n    const [url] = useState(\"https://randomuser.me/api/?results=25\")\n    \n    const { sortFunc } = useGet(url);\n    \n    const { displayedEmployees} = useContext(EmployeeContext)\n\n    return (\n        <table>\n            <thead>\n                <tr>\n                    <td onClick={() => sortFunc(\"name\")}><Button>First Name</Button></td>\n                    <td onClick={() => sortFunc(\"lastname\")}><Button>Last Name</Button></td>\n                    <td onClick={() => sortFunc(\"age\")}><Button>Age</Button></td>\n                    <td onClick={() => sortFunc(\"gender\")}><Button>Gender</Button></td>\n                    <td>E-mail</td>\n                </tr>\n            </thead>\n            <tbody>\n                {displayedEmployees.map(employee => {\n                    return (\n                        <tr key={employee.login.uuid}>\n                            <td>{employee.name.first}</td>\n                            <td>{employee.name.last}</td>\n                            <td>{employee.dob.age}</td>\n                            <td>{employee.gender}</td>\n                            <td>{employee.email}</td>          \n                        </tr>\n                    )\n                }\n                )}\n            </tbody>\n        </table>\n    )\n}\nexport default Table;","import React, {useState} from 'react';\n\nimport './App.css';\nimport Navbar from \"./components/Navbar\"\nimport Table from \"./components/Table\"\n\nimport { EmployeeContext } from \"./components/EmployeeContext\"\n\nfunction App() {\n  const [employees, setEmployees] = useState([]);\n  const [displayedEmployees, setDisplayedEmployees] = useState([])\n\n  return (\n    <div className=\"App\">\n      <EmployeeContext.Provider value={{employees, setEmployees, displayedEmployees, setDisplayedEmployees}}>\n        <Navbar />\n        <Table />\n      </EmployeeContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    \n    window.location.hostname === '[::1]' ||\n    \n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    \n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      \n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        \n        checkValidServiceWorker(swUrl, config);\n\n        \n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        \n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              \n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              \n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              \n              console.log('Content is cached for offline use.');\n\n              \n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  \n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      \n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        \n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        \n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}